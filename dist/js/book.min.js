"use strict";import HideIt from"./HideIt.min.js";import ShowIt from"./ShowIt.min.js";import Comment from"./Comment.min.js";import Slicer from"./Slicer.min.js";import Modal from"./Modal.min.js";import ReturnHTML from"./ReturnHTML.min.js";const currentBookId=+localStorage.getItem("currentBookId");let bookInformation;function addBookInformation(){$.get("../database/books/information.json",{},(t=>{$(t).each(((t,e)=>{e.id===currentBookId&&(bookInformation=e)}));const e=bookInformation.genres.map((t=>`<li class="rt-tags__item">${t}</li>`)),o=String(bookInformation.stars);let n=1===o.length?`${o}.0`:o,s="";for(let t=1;t<=10;t++)s+=`\n                <li class="rt-stars__item ${t<=bookInformation.stars?"checked":""}">\n                   <svg width="31" height="30" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="m15.5 0 4.79 9.874L31 11.467l-7.75 7.681L25.079 30 15.5 24.874 5.921 30 7.75 19.148 0 11.467l10.71-1.593L15.5 0Z"/></svg>\n                </li>\n                `;$("#bookInfo").html(ReturnHTML.bookInformation({image:bookInformation.image,author:bookInformation.author,name:bookInformation.name,synopsis:bookInformation.synopsis,genres:e,stars:{html:s,number:n}}))}))}addBookInformation(),$((()=>{new HideIt({selector:".rt-loader__content",px:"50px",seconds:.5,callback:()=>{$(".rt-loader").remove();new ShowIt({selector:"header, footer, section",seconds:.5}).smoothShow()}}).smoothHideY(),$(".rt-tabs__lines-orange").css({width:$("#comments").width(),left:$("#comments").position().left}),$(".rt-tabs__item").each(((t,e)=>{$(e).on("click",(()=>{$("input",e).is(":checked")&&$(".rt-tabs__lines-orange").css({width:$(e).width(),left:$(e).position().left})}))})),$("#chapters-container").hide();const t=$(".rt-tabs__item");function e(t,e){new HideIt({selector:t,px:"0px",seconds:.2,callback:()=>{$(t).hide(),$(e).show(),new ShowIt({selector:e,seconds:.2}).smoothShow()}}).smoothHideY()}$("input",t).change((()=>{t.each(((t,o)=>{const n=$("input",o);$(n).is(":checked")&&("chapters"!==o.id?"comments"!==o.id||e("#chapters-container","#comments-container"):e("#comments-container","#chapters-container"))}))}));const o=new Slicer([],{start:0,end:5});let n=!1;Comment.dynamicTextareaHeight(),$("#main-textarea").on("submit",(function(t){t.preventDefault();const e=$("textarea",$(this));o.data.push(new Comment({name:"Гость",date:(new Date).toLocaleDateString(),text:e.val(),img:"./images/guest.png"})),o.indexes.end>=o.data.length&&(n=!0),n&&(o.indexes={start:o.data.length-1,end:o.data.length},o.addSlicedComments("#main-comments"),ShowIt.smoothShowSlicedElements(".rt-comments > .rt-comment",o.indexes,.5))}));const s=[];$.get("../database/comments/comments.json",{},(t=>{$(t).each(((t,e)=>{e.bookId===currentBookId&&s.push(new Comment(e))})),o.data=s,o.addSlicedComments(".rt-comments"),ShowIt.smoothShowSlicedElements(".rt-comment",o.indexes,.5)})),$("button#show-more-comments").on("click",(()=>{o.indexes={start:o.indexes.end,end:o.indexes.end+5},o.addSlicedComments(".rt-comments"),ShowIt.smoothShowSlicedElements(".rt-comment",o.indexes,.5),o.indexes.end<=o.data.length||(n=!0)})),$(".rt-chapter__link").on("click",(function(t){t.preventDefault();const e=$(".rt-chapter__num",$(this)).text();localStorage.setItem("chapterNum",e),document.location.href="chapter.html"})),new Modal({stars:!0,name:"grade"}).create()}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
