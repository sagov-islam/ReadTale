import HideIt from"./HideIt.min.js";import ShowIt from"./ShowIt.min.js";import Comment from"./Comment.min.js";import Slicer from"./Slicer.min.js";import Modal from"./Modal.min.js";import ReturnHTML from"./ReturnHTML.min.js";$((()=>{const e=parseInt($("body").data().bookid);new HideIt({selector:".rt-loader__content",px:"50px",seconds:.5,callback:()=>{$(".rt-loader").remove();new ShowIt({selector:"header, footer, section",seconds:.5}).smoothShow()}}).smoothHideY(),$(".rt-tabs__lines-orange").css({width:$("#comments").width(),left:$("#comments").position().left}),$(".rt-tabs__item").each(((e,t)=>{$(t).on("click",(()=>{$("input",t).is(":checked")&&$(".rt-tabs__lines-orange").css({width:$(t).width(),left:$(t).position().left})}))})),$("#chapters-container").hide();const t=$(".rt-tabs__item");function o(e,t){new HideIt({selector:e,px:"0px",seconds:.2,callback:()=>{$(e).hide(),$(t).show(),new ShowIt({selector:t,seconds:.2}).smoothShow()}}).smoothHideY()}$("input",t).change((()=>{t.each(((e,t)=>{const n=$("input",t);$(n).is(":checked")&&("chapters"!==t.id?"comments"!==t.id||o("#chapters-container","#comments-container"):o("#comments-container","#chapters-container"))}))}));const n=new Slicer([],{start:0,end:5});let s=!1;Comment.dynamicTextareaHeight(),$("#main-textarea").on("submit",(function(e){e.preventDefault();const t=$("textarea",$(this)).val();n.data.push(new Comment({name:"Alexdsfadf",date:"13",text:t,img:"25"})),s&&(n.indexes={start:n.data.length-1,end:n.data.length},n.addSlicedComments("#main-comments"),ShowIt.smoothShowSlicedElements(".rt-comment",n.indexes,.5))}));const m=[];$.get("../database/comments/comments.json",{},(t=>{$(t).each(((t,o)=>{o.bookId===e&&m.push(new Comment(o))})),n.data=m,n.addSlicedComments(".rt-comments"),ShowIt.smoothShowSlicedElements(".rt-comment",n.indexes,.5)})),$("button#show-more-comments").on("click",(()=>{n.indexes={start:n.indexes.end,end:n.indexes.end+5},n.addSlicedComments(".rt-comments"),ShowIt.smoothShowSlicedElements(".rt-comment",n.indexes,.5),n.indexes.end<=n.data.length||(s=!0)})),new Modal({stars:!0,name:"grade"}).create()}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJvb2subWluLmpzIl0sIm5hbWVzIjpbIkhpZGVJdCIsIlNob3dJdCIsIkNvbW1lbnQiLCJTbGljZXIiLCJNb2RhbCIsIlJldHVybkhUTUwiLCIkIiwiYm9va0lkIiwicGFyc2VJbnQiLCJkYXRhIiwiYm9va2lkIiwic2VsZWN0b3IiLCJweCIsInNlY29uZHMiLCJjYWxsYmFjayIsInJlbW92ZSIsInNtb290aFNob3ciLCJzbW9vdGhIaWRlWSIsImNzcyIsIndpZHRoIiwibGVmdCIsInBvc2l0aW9uIiwiZWFjaCIsImluZGV4IiwidGFiIiwib24iLCJpcyIsImhpZGUiLCJ0YWJzIiwiaGlkZVNob3dUYWJzQ29udGVudCIsImhpZGVFbGVtZW50Iiwic2hvd0VsZW1lbnQiLCJzaG93IiwiY2hhbmdlIiwiaW5wdXQiLCJpZCIsInNsaWNlciIsInN0YXJ0IiwiZW5kIiwiYWxsU2hvd2VkIiwiZHluYW1pY1RleHRhcmVhSGVpZ2h0IiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsInZhbHVlIiwidGhpcyIsInZhbCIsInB1c2giLCJuYW1lIiwiZGF0ZSIsInRleHQiLCJpbWciLCJpbmRleGVzIiwibGVuZ3RoIiwiYWRkU2xpY2VkQ29tbWVudHMiLCJzbW9vdGhTaG93U2xpY2VkRWxlbWVudHMiLCJjb21tZW50cyIsImdldCIsImNvbW1lbnRQcm9wcyIsInN0YXJzIiwiY3JlYXRlIl0sIm1hcHBpbmdzIjoiT0FBT0EsV0FBWSx5QkFDWkMsV0FBWSx5QkFDWkMsWUFBYSwwQkFDYkMsV0FBWSx5QkFDWkMsVUFBVyx3QkFDWEMsZUFBZ0Isc0JBRXZCQyxHQUFFLEtBQ0UsTUFBTUMsRUFBU0MsU0FBU0YsRUFBRSxRQUFRRyxPQUFPQyxRQUd6QixJQUFJVixPQUFPLENBQ3ZCVyxTQUFVLHNCQUNWQyxHQUFJLE9BQ0pDLFFBQVMsR0FDVEMsU0FBVSxLQUNOUixFQUFFLGNBQWNTLFNBRUQsSUFBSWQsT0FBTyxDQUFFVSxTQUFVLDBCQUEyQkUsUUFBUyxLQUNuRUcsZ0JBR1BDLGNBS1JYLEVBQUUsMEJBQTBCWSxJQUFJLENBQzVCQyxNQUFPYixFQUFFLGFBQWFhLFFBQ3RCQyxLQUFNZCxFQUFFLGFBQWFlLFdBQVdELE9BR3BDZCxFQUFFLGtCQUFrQmdCLE1BQUssQ0FBQ0MsRUFBT0MsS0FDN0JsQixFQUFFa0IsR0FBS0MsR0FBRyxTQUFTLEtBQ1ZuQixFQUFFLFFBQVNrQixHQUFLRSxHQUFHLGFBRXhCcEIsRUFBRSwwQkFBMEJZLElBQUksQ0FDNUJDLE1BQU9iLEVBQUVrQixHQUFLTCxRQUNkQyxLQUFNZCxFQUFFa0IsR0FBS0gsV0FBV0QsYUFRcENkLEVBQUUsdUJBQXVCcUIsT0FFekIsTUFBTUMsRUFBT3RCLEVBQUUsa0JBRWYsU0FBU3VCLEVBQW9CQyxFQUFhQyxHQUN0QyxJQUFJL0IsT0FBTyxDQUNQVyxTQUFVbUIsRUFDVmxCLEdBQUksTUFDSkMsUUFBUyxHQUNUQyxTQUFVLEtBQ05SLEVBQUV3QixHQUFhSCxPQUNmckIsRUFBRXlCLEdBQWFDLE9BQ2YsSUFBSS9CLE9BQU8sQ0FDUFUsU0FBVW9CLEVBQ1ZsQixRQUFTLEtBQ1ZHLGdCQUVSQyxjQWRRWCxFQUFFLFFBQVVzQixHQWtCcEJLLFFBQU8sS0FDVkwsRUFBS04sTUFBSyxDQUFDQyxFQUFPQyxLQUVkLE1BQU1VLEVBQVM1QixFQUFFLFFBQVNrQixHQUNuQmxCLEVBQUU0QixHQUFPUixHQUFHLGNBRUosYUFBWEYsRUFBSVcsR0FLTyxhQUFYWCxFQUFJVyxJQUNKTixFQUFvQixzQkFBdUIsdUJBTDNDQSxFQUFvQixzQkFBdUIsOEJBYXZELE1BQU1PLEVBQVMsSUFBSWpDLE9BQU8sR0FBSSxDQUFFa0MsTUFBTyxFQUFHQyxJQUFLLElBQy9DLElBQUlDLEdBQVksRUFFaEJyQyxRQUFRc0Msd0JBQ1JsQyxFQUFFLGtCQUFrQm1CLEdBQUcsVUFBVSxTQUFTZ0IsR0FDdENBLEVBQU1DLGlCQUVOLE1BQU1DLEVBQVFyQyxFQUFFLFdBQVlBLEVBQUVzQyxPQUFPQyxNQUVyQ1QsRUFBTzNCLEtBQUtxQyxLQUFLLElBQUk1QyxRQUFRLENBQ3pCNkMsS0FBTSxhQUNOQyxLQUFNLEtBQ05DLEtBQU1OLEVBQ05PLElBQUssUUFHRlgsSUFDUEgsRUFBT2UsUUFBVSxDQUFFZCxNQUFPRCxFQUFPM0IsS0FBSzJDLE9BQVMsRUFBR2QsSUFBS0YsRUFBTzNCLEtBQUsyQyxRQUNuRWhCLEVBQU9pQixrQkFBa0Isa0JBQ3pCcEQsT0FBT3FELHlCQUF5QixjQUFlbEIsRUFBT2UsUUFBUyxRQUduRSxNQUFNSSxFQUFXLEdBQ2pCakQsRUFBRWtELElBQUkscUNBQXNDLElBQUsvQyxJQUU3Q0gsRUFBRUcsR0FBTWEsTUFBSyxDQUFDQyxFQUFPa0MsS0FDYkEsRUFBYWxELFNBQVdBLEdBQzVCZ0QsRUFBU1QsS0FBSyxJQUFJNUMsUUFBUXVELE9BRzlCckIsRUFBTzNCLEtBQU84QyxFQUNkbkIsRUFBT2lCLGtCQUFrQixnQkFDekJwRCxPQUFPcUQseUJBQXlCLGNBQWVsQixFQUFPZSxRQUFTLE9BS25FN0MsRUFBRSw2QkFBNkJtQixHQUFHLFNBQVMsS0FDdkNXLEVBQU9lLFFBQVUsQ0FBRWQsTUFBT0QsRUFBT2UsUUFBUWIsSUFBS0EsSUFBS0YsRUFBT2UsUUFBUWIsSUFBTSxHQUN4RUYsRUFBT2lCLGtCQUFrQixnQkFDekJwRCxPQUFPcUQseUJBQXlCLGNBQWVsQixFQUFPZSxRQUFTLElBRTNEZixFQUFPZSxRQUFRYixLQUFPRixFQUFPM0IsS0FBSzJDLFNBQ3RDYixHQUFZLE1BR2hCLElBQUluQyxNQUFNLENBQ05zRCxPQUFPLEVBQ1BYLEtBQU0sVUFDUFkiLCJmaWxlIjoiYm9vay5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSGlkZUl0IGZyb20gJy4vSGlkZUl0Lm1pbi5qcyc7XHJcbmltcG9ydCBTaG93SXQgZnJvbSAnLi9TaG93SXQubWluLmpzJztcclxuaW1wb3J0IENvbW1lbnQgZnJvbSAnLi9Db21tZW50Lm1pbi5qcyc7XHJcbmltcG9ydCBTbGljZXIgZnJvbSAnLi9TbGljZXIubWluLmpzJztcclxuaW1wb3J0IE1vZGFsIGZyb20gJy4vTW9kYWwubWluLmpzJztcclxuaW1wb3J0IFJldHVybkhUTUwgZnJvbSAnLi9SZXR1cm5IVE1MLm1pbi5qcyc7XHJcblxyXG4kKCgpID0+IHtcclxuICAgIGNvbnN0IGJvb2tJZCA9IHBhcnNlSW50KCQoJ2JvZHknKS5kYXRhKCkuYm9va2lkKTtcclxuICAgIFxyXG4gICAgLy8gU01PT1RIIFNIT1cgLS0tLT5cclxuICAgIGNvbnN0IHNwaW5uZXIgPSBuZXcgSGlkZUl0KHtcclxuICAgICAgICBzZWxlY3RvcjogJy5ydC1sb2FkZXJfX2NvbnRlbnQnLFxyXG4gICAgICAgIHB4OiAnNTBweCcsXHJcbiAgICAgICAgc2Vjb25kczogMC41LFxyXG4gICAgICAgIGNhbGxiYWNrOiAoKSA9PiB7XHJcbiAgICAgICAgICAgICQoJy5ydC1sb2FkZXInKS5yZW1vdmUoKTtcclxuXHJcbiAgICAgICAgICAgIGNvbnN0IGJsb2NrcyA9IG5ldyBTaG93SXQoeyBzZWxlY3RvcjogJ2hlYWRlciwgZm9vdGVyLCBzZWN0aW9uJywgc2Vjb25kczogMC41IH0pO1xyXG4gICAgICAgICAgICBibG9ja3Muc21vb3RoU2hvdygpOyAgICBcclxuICAgICAgICB9XHJcbiAgICB9KVxyXG4gICAgc3Bpbm5lci5zbW9vdGhIaWRlWSgpO1xyXG4gICAgLy8gPC0tLS0gU01PT1RIIFNIT1dcclxuXHJcblxyXG4gICAgLy8gVEFCUyAtLS0tPlxyXG4gICAgJCgnLnJ0LXRhYnNfX2xpbmVzLW9yYW5nZScpLmNzcyh7XHJcbiAgICAgICAgd2lkdGg6ICQoJyNjb21tZW50cycpLndpZHRoKCksXHJcbiAgICAgICAgbGVmdDogJCgnI2NvbW1lbnRzJykucG9zaXRpb24oKS5sZWZ0XHJcbiAgICB9KVxyXG4gICBcclxuICAgICQoJy5ydC10YWJzX19pdGVtJykuZWFjaCgoaW5kZXgsIHRhYikgPT4ge1xyXG4gICAgICAgICQodGFiKS5vbignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIGlmICghJCgnaW5wdXQnLCB0YWIpLmlzKCc6Y2hlY2tlZCcpKSByZXR1cm5cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICQoJy5ydC10YWJzX19saW5lcy1vcmFuZ2UnKS5jc3Moe1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6ICQodGFiKS53aWR0aCgpLFxyXG4gICAgICAgICAgICAgICAgbGVmdDogJCh0YWIpLnBvc2l0aW9uKCkubGVmdFxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH0pXHJcbiAgICB9KSBcclxuICAgIC8vIDwtLS0tIFRBQlNcclxuXHJcblxyXG4gICAgLy8gVEFCUyBDT05URU5UIC0tLS0+XHJcbiAgICAkKCcjY2hhcHRlcnMtY29udGFpbmVyJykuaGlkZSgpO1xyXG5cclxuICAgIGNvbnN0IHRhYnMgPSAkKCcucnQtdGFic19faXRlbScpO1xyXG4gICAgY29uc3QgaW5wdXRzID0gJCgnaW5wdXQnLCAgdGFicyk7XHJcbiAgICBmdW5jdGlvbiBoaWRlU2hvd1RhYnNDb250ZW50KGhpZGVFbGVtZW50LCBzaG93RWxlbWVudCkge1xyXG4gICAgICAgIG5ldyBIaWRlSXQoe1xyXG4gICAgICAgICAgICBzZWxlY3RvcjogaGlkZUVsZW1lbnQsXHJcbiAgICAgICAgICAgIHB4OiAnMHB4JyxcclxuICAgICAgICAgICAgc2Vjb25kczogMC4yLFxyXG4gICAgICAgICAgICBjYWxsYmFjazogKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgJChoaWRlRWxlbWVudCkuaGlkZSgpO1xyXG4gICAgICAgICAgICAgICAgJChzaG93RWxlbWVudCkuc2hvdygpO1xyXG4gICAgICAgICAgICAgICAgbmV3IFNob3dJdCh7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6IHNob3dFbGVtZW50LFxyXG4gICAgICAgICAgICAgICAgICAgIHNlY29uZHM6IDAuMlxyXG4gICAgICAgICAgICAgICAgfSkuc21vb3RoU2hvdygpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSkuc21vb3RoSGlkZVkoKTtcclxuICAgICAgICByZXR1cm5cclxuICAgIH1cclxuXHJcbiAgICBpbnB1dHMuY2hhbmdlKCgpID0+IHtcclxuICAgICAgICB0YWJzLmVhY2goKGluZGV4LCB0YWIpID0+IHtcclxuXHJcbiAgICAgICAgICAgIGNvbnN0IGlucHV0ID0gICQoJ2lucHV0JywgdGFiKTtcclxuICAgICAgICAgICAgaWYgKCAhICQoaW5wdXQpLmlzKCc6Y2hlY2tlZCcpKSByZXR1cm5cclxuXHJcbiAgICAgICAgICAgIGlmICh0YWIuaWQgPT09ICdjaGFwdGVycycpIHtcclxuICAgICAgICAgICAgICAgIGhpZGVTaG93VGFic0NvbnRlbnQoJyNjb21tZW50cy1jb250YWluZXInLCAnI2NoYXB0ZXJzLWNvbnRhaW5lcicpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIGlmICh0YWIuaWQgPT09ICdjb21tZW50cycpIHtcclxuICAgICAgICAgICAgICAgIGhpZGVTaG93VGFic0NvbnRlbnQoJyNjaGFwdGVycy1jb250YWluZXInLCAnI2NvbW1lbnRzLWNvbnRhaW5lcicpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgICAgIFxyXG4gICAgfSlcclxuICAgIC8vIDwtLS0tIFRBQlMgQ09OVEVOVFxyXG5cclxuICAgIGNvbnN0IHNsaWNlciA9IG5ldyBTbGljZXIoW10sIHsgc3RhcnQ6IDAsIGVuZDogNSB9KTtcclxuICAgIGxldCBhbGxTaG93ZWQgPSBmYWxzZTtcclxuICAgIFxyXG4gICAgQ29tbWVudC5keW5hbWljVGV4dGFyZWFIZWlnaHQoKTtcclxuICAgICQoJyNtYWluLXRleHRhcmVhJykub24oJ3N1Ym1pdCcsIGZ1bmN0aW9uKGV2ZW50KSB7XHJcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuXHJcbiAgICAgICAgY29uc3QgdmFsdWUgPSAkKCd0ZXh0YXJlYScsICQodGhpcykpLnZhbCgpO1xyXG5cclxuICAgICAgICBzbGljZXIuZGF0YS5wdXNoKG5ldyBDb21tZW50KHtcclxuICAgICAgICAgICAgbmFtZTogJ0FsZXhkc2ZhZGYnLFxyXG4gICAgICAgICAgICBkYXRlOiAnMTMnLFxyXG4gICAgICAgICAgICB0ZXh0OiB2YWx1ZSxcclxuICAgICAgICAgICAgaW1nOiAnMjUnXHJcbiAgICAgICAgfSkpXHJcblxyXG4gICAgICAgIGlmICggISBhbGxTaG93ZWQpIHJldHVyblxyXG4gICAgICAgIHNsaWNlci5pbmRleGVzID0geyBzdGFydDogc2xpY2VyLmRhdGEubGVuZ3RoIC0gMSwgZW5kOiBzbGljZXIuZGF0YS5sZW5ndGggfTtcclxuICAgICAgICBzbGljZXIuYWRkU2xpY2VkQ29tbWVudHMoJyNtYWluLWNvbW1lbnRzJyk7XHJcbiAgICAgICAgU2hvd0l0LnNtb290aFNob3dTbGljZWRFbGVtZW50cygnLnJ0LWNvbW1lbnQnLCBzbGljZXIuaW5kZXhlcywgMC41KTtcclxuICAgIH0pXHJcblxyXG4gICAgY29uc3QgY29tbWVudHMgPSBbXTtcclxuICAgICQuZ2V0KCcuLi9kYXRhYmFzZS9jb21tZW50cy9jb21tZW50cy5qc29uJywge30sIChkYXRhKSA9PiB7XHJcblxyXG4gICAgICAgICQoZGF0YSkuZWFjaCgoaW5kZXgsIGNvbW1lbnRQcm9wcykgPT4ge1xyXG4gICAgICAgICAgICBpZiAoY29tbWVudFByb3BzLmJvb2tJZCAhPT0gYm9va0lkKSByZXR1cm5cclxuICAgICAgICAgICAgY29tbWVudHMucHVzaChuZXcgQ29tbWVudChjb21tZW50UHJvcHMpKTtcclxuICAgICAgICB9KVxyXG5cclxuICAgICAgICBzbGljZXIuZGF0YSA9IGNvbW1lbnRzO1xyXG4gICAgICAgIHNsaWNlci5hZGRTbGljZWRDb21tZW50cygnLnJ0LWNvbW1lbnRzJyk7XHJcbiAgICAgICAgU2hvd0l0LnNtb290aFNob3dTbGljZWRFbGVtZW50cygnLnJ0LWNvbW1lbnQnLCBzbGljZXIuaW5kZXhlcywgMC41KTtcclxuXHJcbiAgICAgICAgXHJcbiAgICB9KVxyXG5cclxuICAgICQoJ2J1dHRvbiNzaG93LW1vcmUtY29tbWVudHMnKS5vbignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgc2xpY2VyLmluZGV4ZXMgPSB7IHN0YXJ0OiBzbGljZXIuaW5kZXhlcy5lbmQsIGVuZDogc2xpY2VyLmluZGV4ZXMuZW5kICsgNSB9O1xyXG4gICAgICAgIHNsaWNlci5hZGRTbGljZWRDb21tZW50cygnLnJ0LWNvbW1lbnRzJyk7XHJcbiAgICAgICAgU2hvd0l0LnNtb290aFNob3dTbGljZWRFbGVtZW50cygnLnJ0LWNvbW1lbnQnLCBzbGljZXIuaW5kZXhlcywgMC41KTtcclxuXHJcbiAgICAgICAgaWYgKHNsaWNlci5pbmRleGVzLmVuZCA8PSBzbGljZXIuZGF0YS5sZW5ndGgpIHJldHVyblxyXG4gICAgICAgIGFsbFNob3dlZCA9IHRydWU7XHJcbiAgICB9KVxyXG5cclxuICAgIG5ldyBNb2RhbCh7XHJcbiAgICAgICAgc3RhcnM6IHRydWUsXHJcbiAgICAgICAgbmFtZTogJ2dyYWRlJ1xyXG4gICAgfSkuY3JlYXRlKCk7XHJcblxyXG4gICAgXHJcbn0pIl19
