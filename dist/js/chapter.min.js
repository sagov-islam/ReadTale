"use strict";import DropDown from"./DropDown.min.js";import HideIt from"./HideIt.min.js";import ShowIt from"./ShowIt.min.js";import Comment from"./Comment.min.js";import Slicer from"./Slicer.min.js";import Modal from"./Modal.min.js";$((()=>{const t=new Slicer([],{start:0,end:5}),e=parseInt($("body").data().bookid);new HideIt({selector:".rt-loader__content",px:"50px",seconds:.5,callback:()=>{$(".rt-loader").remove();new ShowIt({selector:"header, footer, section",seconds:.5}).smoothShow()}}).smoothHideY();let n,o,a,i,m=1,r=1;function s(t,e){const n=[];let o=1;for(;o<=e;o++)n[o-1]=o;return new DropDown({dataAtr:t.dataAtr,classes:t.classes,buttonSize:t.buttonSize,listSize:t.listSize,transition:t.transition,title:t.title,inputName:t.inputName,callback:t.callback,list:n})}$.get("../database/books/information.json",{},(t=>{$(t).each(((t,n)=>{n.id===e&&(o=n.chapters)})),$.get(`${o[r].link}`,{dataType:"text"},(t=>{n=h(t),a=Object.keys(n).length,i=Object.keys(o).length,s({dataAtr:"pages",buttonSize:"normal",listSize:"100%",transition:.2,title:"Страница",inputName:"link",callback:function(t){$(".rt-dropdown__item button",t).on("click",(function(){m=parseInt($(this).text()),m>a?document.location.href="book.html":($(".rt-page__text").html(n[m]),$(".rt-page__info-page").html(`Страница ${m}`),$(".rt-page__info-chapter").html(`Глава ${r}`),d())}))}},a).create(),s({dataAtr:"chapters",classes:["rt-mr-default"],buttonSize:"normal",listSize:"100%",transition:.2,title:"Главы",inputName:"link",callback:function(t){$(".rt-dropdown__item button",t).on("click",(function(){r=parseInt($(this).text()),m=1,$.get(`${o[r].link}`,{dataType:"text"},(t=>{n=h(t),a=Object.keys(n).length})),$(".rt-page__text").html(n[m]),$(".rt-page__info-page").html(`Страница ${m}`),$(".rt-page__info-chapter").html(`Глава ${r}`),d()}))}},i).create(),$(".rt-page__text").html(n[m]),$(".rt-page__info-page").html(`Страница ${m}`),$(".rt-page__info-chapter").html(`Глава ${r}`)}))})),$("button#next-page").on("click",(function(){m>=a?document.location.href="book.html":($(".rt-page__text").html(n[++m]),$(".rt-page__info-page").html(`Страница ${m}`),$(".rt-page__info-chapter").html(`Глава ${r}`),d())})),$("button#last-page").on("click",(function(){1!==m?($(".rt-page__text").html(n[--m]),$(".rt-page__info-page").html(`Страница ${m}`),$(".rt-page__info-chapter").html(`Глава ${r}`),d()):document.location.href="book.html"}));let l=[],c=!1;function d(){$.get("../database/comments/chapter-comments.json",{},(n=>{$(".rt-comments").html(""),l=[],$(n).each(((t,n)=>{n.bookId===e&&n.page===m&&l.push(new Comment(n))})),t.data=l,t.indexes={start:0,end:5},t.addSlicedComments(".rt-comments"),ShowIt.smoothShowSlicedElements(".rt-comment",t.indexes,.5)}))}function h(t){const e=t.split("");let n={},o={start:0,end:3115},a=1;return n[a]=[],$(e).each(((t,e)=>{t>=o.start&&t<=o.end?n[a]+=e:(n[++a]=[],o.start=o.end,o.end+=3115)})),n}d(),$("button#show-more-comments").on("click",(()=>{t.indexes={start:t.indexes.end,end:t.indexes.end+5},t.addSlicedComments(".rt-comments"),ShowIt.smoothShowSlicedElements(".rt-comment",t.indexes,.5),t.indexes.end<=t.data.length||(c=!0)})),Comment.dynamicTextareaHeight(),$("#main-textarea").on("submit",(function(e){e.preventDefault();const n=$("textarea",$(this));t.data.push(new Comment({name:"Александр",date:(new Date).toLocaleDateString(),text:$(n).val(),img:"./images/user-image.jpg"})),n.val(""),t.indexes.end>=t.data.length&&(c=!0),c&&(t.indexes={start:t.data.length-1,end:t.data.length},t.addSlicedComments("#main-comments"),ShowIt.smoothShowSlicedElements(".rt-comment",t.indexes,.5))}))}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,
