"use strict";import ReturnHTML from"./ReturnHTML.min.js";import Comment from"./Comment.min.js";export default class Slicer{constructor(t,e){this.data=t,this.indexes=e}addSlicedComments(t){const e=$(t),s=this.data.slice(this.indexes.start,this.indexes.end);let n="";$(s).each(((t,e)=>{n+=ReturnHTML.comment({name:e.props.name,date:e.props.date,text:e.props.text,img:e.props.img})})),e.append(n);(new Comment).eventAddTextarea(),this.data.length<=5&&$("button#show-more-comments").hide(),this.data.length>5&&$("button#show-more-comments").show(),this.indexes.end>=this.data.length&&$("button#show-more-comments").hide()}addSlicedBooks(t){const e=$(t),s=this.data.slice(this.indexes.start,this.indexes.end);let n="";s.forEach((t=>{n+=ReturnHTML.card({name:t.name,synopsis:t.synopsis,genres:t.genres,image:t.image})})),e.append(n),this.data.length<=5&&$("button#show-more-books").hide(),this.data.length>5&&$("button#show-more-books").show(),this.indexes.end>=this.data.length&&$("button#show-more-books").hide()}}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlNsaWNlci5taW4uanMiXSwibmFtZXMiOlsiUmV0dXJuSFRNTCIsIkNvbW1lbnQiLCJTbGljZXIiLCJjb25zdHJ1Y3RvciIsImRhdGEiLCJpbmRleGVzIiwidGhpcyIsImFkZFNsaWNlZENvbW1lbnRzIiwiY29udGFpbmVyU2VsZWN0b3IiLCJjb250YWluZXIiLCIkIiwiY29tbWVudHMiLCJzbGljZSIsInN0YXJ0IiwiZW5kIiwiaHRtbCIsImVhY2giLCJpbmRleCIsImNvbW1lbnQiLCJuYW1lIiwicHJvcHMiLCJkYXRlIiwidGV4dCIsImltZyIsImFwcGVuZCIsImV2ZW50QWRkVGV4dGFyZWEiLCJsZW5ndGgiLCJoaWRlIiwic2hvdyIsImFkZFNsaWNlZEJvb2tzIiwiYm9va3MiLCJmb3JFYWNoIiwiYm9vayIsImNhcmQiLCJzeW5vcHNpcyIsImdlbnJlcyIsImltYWdlIl0sIm1hcHBpbmdzIjoiQUFBQSxvQkFFT0EsZUFBZ0IsNkJBQ2hCQyxZQUFhLGtDQUVMLE1BQU1DLE9BRWpCQyxZQUFZQyxFQUFNQyxHQUNkQyxLQUFLRixLQUFPQSxFQUNaRSxLQUFLRCxRQUFVQSxFQUluQkUsa0JBQWtCQyxHQUNkLE1BQU1DLEVBQVlDLEVBQUVGLEdBQ2RHLEVBQVdMLEtBQUtGLEtBQUtRLE1BQU1OLEtBQUtELFFBQVFRLE1BQU9QLEtBQUtELFFBQVFTLEtBRWxFLElBQUlDLEVBQU8sR0FDWEwsRUFBRUMsR0FBVUssTUFBSyxDQUFDQyxFQUFPQyxLQUNyQkgsR0FBUWYsV0FBV2tCLFFBQVEsQ0FDdkJDLEtBQU1ELEVBQVFFLE1BQU1ELEtBQ3BCRSxLQUFNSCxFQUFRRSxNQUFNQyxLQUNwQkMsS0FBTUosRUFBUUUsTUFBTUUsS0FDcEJDLElBQUtMLEVBQVFFLE1BQU1HLFNBRzNCZCxFQUFVZSxPQUFPVCxJQUVELElBQUlkLFNBQ1p3QixtQkFFSm5CLEtBQUtGLEtBQUtzQixRQUFVLEdBQUdoQixFQUFFLDZCQUE2QmlCLE9BQ3REckIsS0FBS0YsS0FBS3NCLE9BQVMsR0FBR2hCLEVBQUUsNkJBQTZCa0IsT0FDckR0QixLQUFLRCxRQUFRUyxLQUFPUixLQUFLRixLQUFLc0IsUUFBUWhCLEVBQUUsNkJBQTZCaUIsT0FHN0VFLGVBQWVyQixHQUNYLE1BQU1DLEVBQVlDLEVBQUVGLEdBQ2RzQixFQUFReEIsS0FBS0YsS0FBS1EsTUFBTU4sS0FBS0QsUUFBUVEsTUFBT1AsS0FBS0QsUUFBUVMsS0FFL0QsSUFBSUMsRUFBTyxHQUNYZSxFQUFNQyxTQUFRQyxJQUNWakIsR0FBUWYsV0FBV2lDLEtBQUssQ0FDcEJkLEtBQU1hLEVBQUtiLEtBQ1hlLFNBQVVGLEVBQUtFLFNBQ2ZDLE9BQVFILEVBQUtHLE9BQ2JDLE1BQU9KLEVBQUtJLFdBSXBCM0IsRUFBVWUsT0FBT1QsR0FFYlQsS0FBS0YsS0FBS3NCLFFBQVUsR0FBR2hCLEVBQUUsMEJBQTBCaUIsT0FDbkRyQixLQUFLRixLQUFLc0IsT0FBUyxHQUFHaEIsRUFBRSwwQkFBMEJrQixPQUNsRHRCLEtBQUtELFFBQVFTLEtBQU9SLEtBQUtGLEtBQUtzQixRQUFRaEIsRUFBRSwwQkFBMEJpQiIsImZpbGUiOiJTbGljZXIubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuaW1wb3J0IFJldHVybkhUTUwgZnJvbSAnLi9SZXR1cm5IVE1MLm1pbi5qcyc7XHJcbmltcG9ydCBDb21tZW50IGZyb20gJy4vQ29tbWVudC5taW4uanMnO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2xpY2VyIHtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihkYXRhLCBpbmRleGVzKSB7XHJcbiAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcclxuICAgICAgICB0aGlzLmluZGV4ZXMgPSBpbmRleGVzXHJcbiAgICB9XHJcblxyXG4gICAgLy8gUFVCTElDIC0tLS0+XHJcbiAgICBhZGRTbGljZWRDb21tZW50cyhjb250YWluZXJTZWxlY3Rvcikge1xyXG4gICAgICAgIGNvbnN0IGNvbnRhaW5lciA9ICQoY29udGFpbmVyU2VsZWN0b3IpO1xyXG4gICAgICAgIGNvbnN0IGNvbW1lbnRzID0gdGhpcy5kYXRhLnNsaWNlKHRoaXMuaW5kZXhlcy5zdGFydCwgdGhpcy5pbmRleGVzLmVuZCk7XHJcbiAgIFxyXG4gICAgICAgIGxldCBodG1sID0gJyc7XHJcbiAgICAgICAgJChjb21tZW50cykuZWFjaCgoaW5kZXgsIGNvbW1lbnQpID0+IHtcclxuICAgICAgICAgICAgaHRtbCArPSBSZXR1cm5IVE1MLmNvbW1lbnQoe1xyXG4gICAgICAgICAgICAgICAgbmFtZTogY29tbWVudC5wcm9wcy5uYW1lLFxyXG4gICAgICAgICAgICAgICAgZGF0ZTogY29tbWVudC5wcm9wcy5kYXRlLFxyXG4gICAgICAgICAgICAgICAgdGV4dDogY29tbWVudC5wcm9wcy50ZXh0LFxyXG4gICAgICAgICAgICAgICAgaW1nOiBjb21tZW50LnByb3BzLmltZ1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGNvbnRhaW5lci5hcHBlbmQoaHRtbCk7XHJcblxyXG4gICAgICAgIGNvbnN0IGNvbW1lbnQgPSBuZXcgQ29tbWVudCgpO1xyXG4gICAgICAgIGNvbW1lbnQuZXZlbnRBZGRUZXh0YXJlYSgpO1xyXG5cclxuICAgICAgICBpZiAodGhpcy5kYXRhLmxlbmd0aCA8PSA1KSAkKCdidXR0b24jc2hvdy1tb3JlLWNvbW1lbnRzJykuaGlkZSgpO1xyXG4gICAgICAgIGlmICh0aGlzLmRhdGEubGVuZ3RoID4gNSkgJCgnYnV0dG9uI3Nob3ctbW9yZS1jb21tZW50cycpLnNob3coKTtcclxuICAgICAgICBpZiAodGhpcy5pbmRleGVzLmVuZCA+PSB0aGlzLmRhdGEubGVuZ3RoKSAkKCdidXR0b24jc2hvdy1tb3JlLWNvbW1lbnRzJykuaGlkZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIGFkZFNsaWNlZEJvb2tzKGNvbnRhaW5lclNlbGVjdG9yKSB7XHJcbiAgICAgICAgY29uc3QgY29udGFpbmVyID0gJChjb250YWluZXJTZWxlY3Rvcik7XHJcbiAgICAgICAgY29uc3QgYm9va3MgPSB0aGlzLmRhdGEuc2xpY2UodGhpcy5pbmRleGVzLnN0YXJ0LCB0aGlzLmluZGV4ZXMuZW5kKTtcclxuXHJcbiAgICAgICAgbGV0IGh0bWwgPSAnJztcclxuICAgICAgICBib29rcy5mb3JFYWNoKGJvb2sgPT4ge1xyXG4gICAgICAgICAgICBodG1sICs9IFJldHVybkhUTUwuY2FyZCh7XHJcbiAgICAgICAgICAgICAgICBuYW1lOiBib29rLm5hbWUsXHJcbiAgICAgICAgICAgICAgICBzeW5vcHNpczogYm9vay5zeW5vcHNpcyxcclxuICAgICAgICAgICAgICAgIGdlbnJlczogYm9vay5nZW5yZXMsXHJcbiAgICAgICAgICAgICAgICBpbWFnZTogYm9vay5pbWFnZVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgXHJcbiAgICAgICAgY29udGFpbmVyLmFwcGVuZChodG1sKTtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuZGF0YS5sZW5ndGggPD0gNSkgJCgnYnV0dG9uI3Nob3ctbW9yZS1ib29rcycpLmhpZGUoKTtcclxuICAgICAgICBpZiAodGhpcy5kYXRhLmxlbmd0aCA+IDUpICQoJ2J1dHRvbiNzaG93LW1vcmUtYm9va3MnKS5zaG93KCk7XHJcbiAgICAgICAgaWYgKHRoaXMuaW5kZXhlcy5lbmQgPj0gdGhpcy5kYXRhLmxlbmd0aCkgJCgnYnV0dG9uI3Nob3ctbW9yZS1ib29rcycpLmhpZGUoKTtcclxuICAgIH1cclxuICAgIC8vIDwtLS0tIFBVQkxJQ1xyXG59Il19
